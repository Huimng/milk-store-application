@page
@model MilkStore.Pages.Home.ProductDetailModel
@using BusinessObjects;
@{
    ViewData["Title"] = "Product Detail";
    Product Product = ViewData["product"] as Product;
}
<div class="product-detail">
    <div class="product-image">
        <img src="/uploads/@Product.UrlImage" alt="Product Image">
    </div>
    <div class="product-info">
        <h1>@Product.ProductName</h1>
        <p>@Product.ProductCode</p>
        <p>@Product.Description</p>
        <p>Brand: @Product.Brand</p>
        <p>Quantity: @Product.Quantity</p>
        <p>Status: <span class="status @(Product.Status == ProductStatus.Available ? "available" : "out-of-stock")">@Product.Status</span></p>
        <p>Price: <span class="discount">@Product.Discount.ToString("C")</span></p>
        <form method="post">
            <input type="hidden" name="productId" value="@Product.ProductId" />
            <label for="quantity">Quantity:</label>
        <div class="quantity-selector">
            <button type="button" onclick="changeQuantity(-1)">-</button>
            <input type="number" name="quantity" id="quantity" value="1" min="1" max="10" readonly />
            <button type="button" onclick="changeQuantity(1)">+</button>
        </div>
        <div class="product-order">
                <button type="submit" formaction="/Home/Cart?handler=AddToCart">Add to Cart</button>
                <button type="submit" formaction="/Home/ProductDetail?handler=BuyNow">Buy Now</button>
        </div>
        </form>
    </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f9f9f9;
    }

    .product-detail {
        display: flex;
        flex-direction: row;
        max-width: 1200px;
        margin: 50px auto;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        border-radius: 10px;
        overflow: hidden;
    }


    .product-image {
        flex: 1;
        max-width: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        box-sizing: border-box;
    }

    .product-image img {
            max-width: 100%;
            height: auto;
            max-height: 500px; /* Ensures the image doesn't get too large */
            border-radius: 10px; /* Adds a bit of a rounded corner for aesthetics */
    }

    .product-info {
        flex: 2;
        padding: 20px;
    }

        .product-info h1 {
            font-size: 2em;
            margin-bottom: 20px;
        }

        .product-info p {
            font-size: 1em;
            margin: 10px 0;
        }

        .product-info .status {
            font-weight: bold;
        }

        .product-info .available {
            color: green;
        }

        .product-info .out-of-stock {
            color: red;
        }

        .product-info .discount {
            color: #d9534f;
            font-weight: bold;
        }

    .product-order {
        margin-top: 20px;
    }

        .product-order button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 1em;
            cursor: pointer;
            margin-right: 10px;
        }

            .product-order button:hover {
                background-color: #0056b3;
            }

    .quantity-selector {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

        .quantity-selector button {
            background-color: #007bff;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            font-size: 1em;
            cursor: pointer;
            margin: 0 5px;
        }

            .quantity-selector button:hover {
                background-color: #0056b3;
            }

        .quantity-selector input {
            width: 60px;
            text-align: center;
            font-size: 1em;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
</style>

<script>
    function changeQuantity(amount) {
        var quantityInput = document.getElementById('quantity');
        var currentQuantity = parseInt(quantityInput.value);
        var maxQuantity = parseInt(quantityInput.max);
        if (!isNaN(currentQuantity)) {
            var newQuantity = currentQuantity + amount;
            if (newQuantity >= 1 && newQuantity <= maxQuantity) {
                quantityInput.value = newQuantity;
            }
        }
    }
</script>
